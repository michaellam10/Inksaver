// fade transition ( e.g @include transition(.4s); )
@mixin transition($transition-time) {
    -webkit-transition: $transition-time;
    -moz-transition: $transition-time;
    -ms-transition: $transition-time;
    -o-transition: $transition-time;
    transition: $transition-time;
}

// opacity ( e.g. @include opacity(.6); )
@mixin opacity($opacity) {
    opacity: $opacity;
    $opacity-ie: $opacity * 100;
    filter: alpha(opacity=$opacity-ie);
}

// box shadow ( e.g @include box-shadow(0 3px 9px rgba(0,0,0,.5)); )
@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
    @if $inset {
        -webkit-box-shadow:inset $top $left $blur $color;
        -moz-box-shadow:inset $top $left $blur $color;
        box-shadow:inset $top $left $blur $color;
    } @else {
        -webkit-box-shadow: $top $left $blur $color;
        -moz-box-shadow: $top $left $blur $color;
        box-shadow: $top $left $blur $color;
    }
}

// background opacity ( e.g. @include background-opacity($primary-color, 0.98); )
@mixin background-opacity($color, $opacity) {
    background: $color;
    background: rgba($color, $opacity);
}

// border radius ( e.g @include border-radius(50%); )
$prefixes: -webkit-, -moz-, -o-, "";

@mixin border-radius($size...) {
	@if length($size) == 1 {
		@each $prefix in $prefixes {
			#{$prefix}border-radius: $size;
		}
	} @else {
		@include custom-border-radius($size...);
	}
}

@mixin custom-border-radius($topLeft: 0, $topRight: 0, $bottomRight: 0, $bottomLeft: 0) {
	@each $prefix in $prefixes {
		@if $prefix == "-moz-" {
			@if $topLeft != 0 { -moz-border-radius-topleft: $topLeft; }
			@if $topRight != 0 { -moz-border-radius-topright: $topRight; }
			@if $bottomRight != 0 { -moz-border-radius-bottomright: $bottomRight; }
			@if $bottomLeft != 0 { -moz-border-radius-bottomleft: $bottomLeft; }
		} @else {
			@if $topLeft != 0 { #{$prefix}border-top-left-radius: $topLeft; }
			@if $topRight != 0 { #{$prefix}border-top-right-radius: $topRight; }
			@if $bottomRight != 0 { #{$prefix}border-bottom-right-radius: $bottomRight; }
			@if $bottomLeft != 0 { #{$prefix}border-bottom-left-radius: $bottomLeft; }
		}
	}
}

// background image cover ( e.g @include cover; )
@mixin cover {
	-webkit-background-size: cover;
	-moz-background-size: cover;
	-o-background-size: cover;
	background-size: cover;
}

// background image contain ( e.g @include contain; )
@mixin contain {
	-webkit-background-size: contain;
	-moz-background-size: contain;
	-o-background-size: contain;
	background-size: contain;
}

// background opacity  ( e.g @include background-opacity (#fff, 0.5); ----> between 0 and 1 )
@mixin background-opacity($color, $opacity) {
    background: $color;
    background: rgba($color, $opacity);
}

// border opacity ( e.g @include border-opacity($primary-color, 30); )
@mixin border-opacity($color, $opacity) {
	$opacity: $opacity / 100;
	border-color: $color;
	border-color: rgba($color, $opacity);
	-moz-background-clip: padding;
	-webkit-background-clip: padding;
	background-clip: padding-box;
}

// @include adjust-width($max-colors);
@mixin adjust-width($max){
   

    @for $i from 1 through $max {
      .item_#{$i} {
        width: 100% / $i;
      }
    }
} 